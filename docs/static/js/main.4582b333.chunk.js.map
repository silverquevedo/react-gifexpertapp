{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAqB7C,OACI,0BAAMC,SAdW,SAACC,GAElBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IAExBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAST,EACTU,SAvBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPdG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,8DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCCXO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAI/B,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAKgB,IAAMN,IACtB,2BAAIA,KCLHO,EAAU,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAC5B,IAAD,EAC8Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAHhB,mBACWC,EADX,KACkBC,EADlB,KA2BI,OAnBAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAUrB,CAAEpB,IAGEqB,EDzBuBK,CAAa1B,GAA/Ba,EAFwB,EAE7BN,KAAYa,EAFiB,EAEjBA,QAInB,OACI,oCACI,wBAAIJ,UAAU,qCAAsChB,GAEnDoB,GAAW,uBAAGJ,UAAU,oCAAb,WAEV,yBAAKA,UAAU,aAGTH,EAAOJ,KAAK,SAACC,GAAD,OACR,kBAAC,EAAD,eACIiB,IAAOjB,EAAIC,IACPD,UEejBkB,EAlCa,WAAO,IAAD,EAGK1C,mBAAS,CAAC,cAHf,mBAGvB2C,EAHuB,KAGZ5C,EAHY,KAY9B,OACA,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACG2B,IAAK3B,EACLA,SAAYA,U,MCnBpC8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.4582b333.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ( {setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(''); //undefined si es vacio\r\n    const handleInputChange = (e) =>\r\n    {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n\r\n        e.preventDefault();\r\n        if(inputValue.trim().length>2)\r\n        {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    \r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value = {inputValue}\r\n                onChange = { handleInputChange }\r\n            \r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes =\r\n{\r\n    setCategories: PropTypes.func.isRequired \r\n}\r\n\r\n\r\n","\r\n\r\n    export const getGifs = async(category) =>\r\n    {\r\n        const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=5&api_key=KIeWH2dX88AMyqB0J5ZApFJbPbScfc3c`;\r\n        const resp = await fetch (url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map(img => {\r\n            return {\r\n                id:img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n        return gifs;\r\n\r\n    }","import React from 'react';\r\n\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    //console.log(title,url);\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src ={url} alt ={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'; //, { useState, useEffect }\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( {category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            \r\n{             <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( (img) => (\r\n                        <GifGridItem  \r\n                            key = {img.id}\r\n                            {...img }\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) =>\r\n{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n\r\n    \r\n    useEffect( () => {\r\n        getGifs( category  )\r\n            .then( imgs =>{\r\n\r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n      \r\n            });\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }, [ category ]) \r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categories,setCategories] = useState(['One Punch']);\r\n/* \r\n    const handleAdd = () => \r\n    {\r\n        //setCategories( [\"Evangelion\",...categories ]);\r\n       // setCategories(cats => [...cats,'Evangelion'] );\r\n        \r\n    } */\r\n\r\n    return (\r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories = { setCategories } />\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category => (\r\n                     <GifGrid \r\n                        key={category}\r\n                        category = {category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n    </>\r\n    )\r\n}\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}